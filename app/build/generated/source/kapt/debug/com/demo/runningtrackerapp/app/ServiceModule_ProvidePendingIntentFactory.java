// Generated by Dagger (https://dagger.dev).
package com.demo.runningtrackerapp.app;

import android.app.PendingIntent;
import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ServiceModule_ProvidePendingIntentFactory implements Factory<PendingIntent> {
  private final Provider<Context> contextProvider;

  public ServiceModule_ProvidePendingIntentFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public PendingIntent get() {
    return providePendingIntent(contextProvider.get());
  }

  public static ServiceModule_ProvidePendingIntentFactory create(
      Provider<Context> contextProvider) {
    return new ServiceModule_ProvidePendingIntentFactory(contextProvider);
  }

  public static PendingIntent providePendingIntent(Context context) {
    return Preconditions.checkNotNullFromProvides(ServiceModule.INSTANCE.providePendingIntent(context));
  }
}
