// Generated by Dagger (https://dagger.dev).
package com.demo.runningtrackerapp.di;

import com.demo.runningtrackerapp.data.DataBase;
import com.demo.runningtrackerapp.data.db.RunDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideDaoFactory implements Factory<RunDao> {
  private final Provider<DataBase> dbProvider;

  public AppModule_ProvideDaoFactory(Provider<DataBase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public RunDao get() {
    return provideDao(dbProvider.get());
  }

  public static AppModule_ProvideDaoFactory create(Provider<DataBase> dbProvider) {
    return new AppModule_ProvideDaoFactory(dbProvider);
  }

  public static RunDao provideDao(DataBase db) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideDao(db));
  }
}
